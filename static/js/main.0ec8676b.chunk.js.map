{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","a","fetch","userPosts","json","response","result","data","filter","post","getPostDetails","postId","postDetails","PostsList","setPostId","useState","posts","setPosts","useEffect","then","className","map","key","id","title","type","onClick","openPostId","getPostComments","postComments","comment","deleteComment","commentId","method","addComment","name","email","body","JSON","stringify","NewCommentForm","setComments","setName","setEmail","setBody","onSubmit","event","preventDefault","value","onChange","target","trim","placeholder","trimLeft","PostDetails","comments","postTitle","setPostTitle","setPostDetails","commentsHidden","setCommentsHidden","handleDelete","length","App","setUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ec8676b.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const userPosts = await fetch(`${BASE_URL}/posts/`);\n  const response = await userPosts.json();\n  const result = response.data;\n\n  if (userId === 0) {\n    return result;\n  }\n\n  return result.filter(post => post.userId === userId);\n};\n\nexport const getPostDetails = async(postId) => {\n  const postDetails = await fetch(`${BASE_URL}/posts/${postId}`);\n  const response = await postDetails.json();\n  const result = response.data;\n\n  return result;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostsList.scss';\n\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({ userId, postId, setPostId }) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(setPosts);\n  }, [userId]);\n\n  const handleClick = (openPostId) => {\n    if (postId === openPostId) {\n      setPostId(0);\n    } else {\n      setPostId(openPostId);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                {`[User #${post.userId}]: `}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleClick(post.id)}\n            >\n              {(postId === post.id) ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  postId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const postComments = await fetch(`${BASE_URL}/comments/`);\n  const response = await postComments.json();\n  const result = response.data;\n\n  return result.filter(comment => comment.postId === postId);\n};\n\nexport const deleteComment = async commentId => fetch(\n  `${BASE_URL}/comments/${commentId}`,\n  { method: 'DELETE' },\n);\n\nexport const addComment = async(postId, name, email, body) => fetch(\n  `${BASE_URL}/comments/`,\n  {\n    method: 'POST',\n    body: JSON.stringify({\n      postId, name, email, body,\n    }),\n  },\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { addComment, getPostComments } from '../../api/comments';\n\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (name && email && body) {\n      addComment(postId, name, email, body)\n        .then(() => getPostComments(postId)\n          .then(setComments));\n    }\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={event => setName(event.target.value.trim())}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={event => setEmail(event.target.value.trim())}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={event => setBody(event.target.value.trimLeft())}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\n\nimport './PostDetails.scss';\n\nimport { getPostComments, deleteComment } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\n\nexport const PostDetails = ({ postId }) => {\n  const [comments, setComments] = useState([]);\n  const [postTitle, setPostTitle] = useState('');\n  const [postDetails, setPostDetails] = useState('');\n  const [commentsHidden, setCommentsHidden] = useState(false);\n\n  useEffect(() => {\n    getPostComments(postId)\n      .then(setComments);\n\n    getPostDetails(postId)\n      .then((post) => {\n        setPostDetails(post.body);\n        setPostTitle(post.title);\n      });\n  }, [postId]);\n\n  const hide = () => {\n    setCommentsHidden(!commentsHidden);\n  };\n\n  const handleDelete = async(id) => {\n    await deleteComment(id);\n    getPostComments(postId)\n      .then(setComments);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <h3>{postTitle}</h3>\n        <p>{postDetails}</p>\n      </section>\n\n      {(comments.length > 0) && (\n        <section className=\"PostDetails__comments\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={hide}\n          >\n            {`${commentsHidden ? 'Show' : 'Hide'} ${comments.length} comments`}\n          </button>\n\n          {!commentsHidden && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li key={comment.id} className=\"PostDetails__list-item\">\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => handleDelete(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>\n                    <i>{comment.name}</i>\n                  </p>\n                  <p>\n                    {comment.body}\n                  </p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n            setComments={setComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setUserId(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            postId={postId}\n            setPostId={setPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {(postId !== 0) && <PostDetails postId={postId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}